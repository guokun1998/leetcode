/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode L = new ListNode(0);
        ListNode p,q,r;
        p = l1;
        q = l2;
        r = L;
        while((p != null) ||(q != null)){
            if(p == null && q != null&&r.val + q.val>9){
	                r.val = (r.val + q.val)%10;
	                r.next = new ListNode(1);	                
            }
            else if(p == null && q != null&&r.val + q.val<=9){
                r.val = r.val + q.val;

                if(q.next != null)
                    r.next = new ListNode(0);
            }
            else if(q == null && p != null &&r.val + p.val>9){
                r.val = (r.val + p.val)%10;

                r.next = new ListNode(1);
            }
            else if(q == null && p != null&&r.val + p.val<=9){
                r.val = r.val + p.val;
                if(p.next != null)
                    r.next = new ListNode(0);
            }
            
            
	        else if(r.val + p.val + q.val >9 && p != null && q != null){
                r.val = (r.val + p.val + q.val) % 10;
                r.next = new ListNode(1);
            }
            else if(r.val + p.val + q.val <=9 && p != null && q != null){
                r.val = r.val + p.val + q.val;
                if(p.next != null || q.next != null)//当p.next ==null && q.next==null || p==null时不再添加next
                    r.next = new ListNode(0);
            }
            if(p != null)
                p = p.next;
            if(q != null)
                q = q.next;
            if(r.next != null)
                r = r.next;
        }
        return L;
    }
}
